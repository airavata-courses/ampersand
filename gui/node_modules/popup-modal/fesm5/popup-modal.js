import { Injectable, Component, ElementRef, Input, ViewEncapsulation, NgModule, defineInjectable } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var PopupModalService = /** @class */ (function () {
    function PopupModalService() {
        this.modals = [];
    }
    /**
     * @param {?} modal
     * @return {?}
     */
    PopupModalService.prototype.add = /**
     * @param {?} modal
     * @return {?}
     */
    function (modal) {
        this.modals.push(modal);
    };
    /**
     * @param {?} id
     * @return {?}
     */
    PopupModalService.prototype.remove = /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        this.modals = this.modals.filter(function (x) { return x.id !== id; });
    };
    /**
     * @param {?} id
     * @return {?}
     */
    PopupModalService.prototype.open = /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        /** @type {?} */
        var modal = this.modals.filter(function (x) { return x.id === id; })[0];
        modal.open();
    };
    /**
     * @param {?} id
     * @return {?}
     */
    PopupModalService.prototype.close = /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        /** @type {?} */
        var modal = this.modals.filter(function (x) { return x.id === id; })[0];
        modal.close();
    };
    PopupModalService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] },
    ];
    /** @nocollapse */
    PopupModalService.ctorParameters = function () { return []; };
    /** @nocollapse */ PopupModalService.ngInjectableDef = defineInjectable({ factory: function PopupModalService_Factory() { return new PopupModalService(); }, token: PopupModalService, providedIn: "root" });
    return PopupModalService;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var PopupModalComponent = /** @class */ (function () {
    function PopupModalComponent(modalService, el) {
        this.modalService = modalService;
        this.el = el;
        this.element = el.nativeElement;
    }
    /**
     * @return {?}
     */
    PopupModalComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var modal = this;
        if (!this.id) {
            console.error('Id is not available');
            return;
        }
        document.body.appendChild(this.element);
        // close modal on background click
        this.element.addEventListener('click', function (e) {
            if (e.target.className === 'ppl-modal') {
                modal.close();
            }
        });
        this.modalService.add(this);
    };
    /**
     * @return {?}
     */
    PopupModalComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.modalService.remove(this.id);
        this.element.remove();
    };
    // open modal
    /**
     * @return {?}
     */
    PopupModalComponent.prototype.open = /**
     * @return {?}
     */
    function () {
        this.element.style.display = 'block';
        document.body.classList.add('ppl-modal-open');
    };
    // close modal
    /**
     * @return {?}
     */
    PopupModalComponent.prototype.close = /**
     * @return {?}
     */
    function () {
        this.element.style.display = 'none';
        document.body.classList.remove('ppl-modal-open');
    };
    PopupModalComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ppl-popup-modal',
                    template: "<div class=\"ppl-modal\">\n            <div class=\"ppl-modal-body\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n        <div class=\"ppl-modal-background\"></div>",
                    styles: ["ppl-popup-modal{display:none}.ppl-modal{position:fixed;top:0;right:0;bottom:0;left:0;z-index:50;overflow:auto}.ppl-modal-background{position:fixed;top:0;right:0;bottom:0;left:0;background-color:#000;opacity:.8;z-index:10}.ppl-modal-body{padding:20px;background:#fff;margin:10%}body.ppl-modal-open{overflow:hidden}"],
                    encapsulation: ViewEncapsulation.None
                },] },
    ];
    /** @nocollapse */
    PopupModalComponent.ctorParameters = function () { return [
        { type: PopupModalService },
        { type: ElementRef }
    ]; };
    PopupModalComponent.propDecorators = {
        id: [{ type: Input }]
    };
    return PopupModalComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var PopupModalModule = /** @class */ (function () {
    function PopupModalModule() {
    }
    PopupModalModule.decorators = [
        { type: NgModule, args: [{
                    imports: [],
                    declarations: [PopupModalComponent],
                    exports: [PopupModalComponent]
                },] },
    ];
    return PopupModalModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

export { PopupModalService, PopupModalComponent, PopupModalModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wdXAtbW9kYWwuanMubWFwIiwic291cmNlcyI6WyJuZzovL3BvcHVwLW1vZGFsL2xpYi9wb3B1cC1tb2RhbC5zZXJ2aWNlLnRzIiwibmc6Ly9wb3B1cC1tb2RhbC9saWIvcG9wdXAtbW9kYWwuY29tcG9uZW50LnRzIiwibmc6Ly9wb3B1cC1tb2RhbC9saWIvcG9wdXAtbW9kYWwubW9kdWxlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgUG9wdXBNb2RhbFNlcnZpY2Uge1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgcHJpdmF0ZSBtb2RhbHM6IGFueVtdID0gW107XG4gXG4gICAgYWRkKG1vZGFsOiBhbnkpIHtcbiAgICAgICAgdGhpcy5tb2RhbHMucHVzaChtb2RhbCk7XG4gICAgfVxuIFxuICAgIHJlbW92ZShpZDogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMubW9kYWxzID0gdGhpcy5tb2RhbHMuZmlsdGVyKHggPT4geC5pZCAhPT0gaWQpO1xuICAgIH1cbiBcbiAgICBvcGVuKGlkOiBzdHJpbmcpIHtcbiAgICAgICAgbGV0IG1vZGFsOiBhbnkgPSB0aGlzLm1vZGFscy5maWx0ZXIoeCA9PiB4LmlkID09PSBpZClbMF07XG4gICAgICAgIG1vZGFsLm9wZW4oKTtcbiAgICB9XG4gXG4gICAgY2xvc2UoaWQ6IHN0cmluZykge1xuICAgICAgICBsZXQgbW9kYWw6IGFueSA9IHRoaXMubW9kYWxzLmZpbHRlcih4ID0+IHguaWQgPT09IGlkKVswXTtcbiAgICAgICAgbW9kYWwuY2xvc2UoKTtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBPbkluaXQsIE9uRGVzdHJveSwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBvcHVwTW9kYWxTZXJ2aWNlIH0gZnJvbSAnLi9wb3B1cC1tb2RhbC5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncHBsLXBvcHVwLW1vZGFsJyxcbiAgdGVtcGxhdGU6IGA8ZGl2IGNsYXNzPVwicHBsLW1vZGFsXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHBsLW1vZGFsLWJvZHlcIj5cbiAgICAgICAgICAgICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJwcGwtbW9kYWwtYmFja2dyb3VuZFwiPjwvZGl2PmAsXG4gIHN0eWxlczogW2BwcGwtcG9wdXAtbW9kYWx7ZGlzcGxheTpub25lfS5wcGwtbW9kYWx7cG9zaXRpb246Zml4ZWQ7dG9wOjA7cmlnaHQ6MDtib3R0b206MDtsZWZ0OjA7ei1pbmRleDo1MDtvdmVyZmxvdzphdXRvfS5wcGwtbW9kYWwtYmFja2dyb3VuZHtwb3NpdGlvbjpmaXhlZDt0b3A6MDtyaWdodDowO2JvdHRvbTowO2xlZnQ6MDtiYWNrZ3JvdW5kLWNvbG9yOiMwMDA7b3BhY2l0eTouODt6LWluZGV4OjEwfS5wcGwtbW9kYWwtYm9keXtwYWRkaW5nOjIwcHg7YmFja2dyb3VuZDojZmZmO21hcmdpbjoxMCV9Ym9keS5wcGwtbW9kYWwtb3BlbntvdmVyZmxvdzpoaWRkZW59YF0sXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgUG9wdXBNb2RhbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcblxuICAgIEBJbnB1dCgpIGlkOiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBlbGVtZW50OiBhbnk7XG4gXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBtb2RhbFNlcnZpY2U6IFBvcHVwTW9kYWxTZXJ2aWNlLCBwcml2YXRlIGVsOiBFbGVtZW50UmVmKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGVsLm5hdGl2ZUVsZW1lbnQ7XG4gICAgfVxuIFxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xuICAgICAgICBsZXQgbW9kYWwgPSB0aGlzO1xuIFxuICAgICAgICBpZiAoIXRoaXMuaWQpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0lkIGlzIG5vdCBhdmFpbGFibGUnKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuIFxuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMuZWxlbWVudCk7XG4gXG4gICAgICAgIC8vIGNsb3NlIG1vZGFsIG9uIGJhY2tncm91bmQgY2xpY2tcbiAgICAgICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGU6IGFueSkge1xuICAgICAgICAgICAgaWYgKGUudGFyZ2V0LmNsYXNzTmFtZSA9PT0gJ3BwbC1tb2RhbCcpIHtcbiAgICAgICAgICAgICAgICBtb2RhbC5jbG9zZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiBcbiAgICAgICAgXG4gICAgICAgIHRoaXMubW9kYWxTZXJ2aWNlLmFkZCh0aGlzKTtcbiAgICB9XG4gXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgICAgIHRoaXMubW9kYWxTZXJ2aWNlLnJlbW92ZSh0aGlzLmlkKTtcbiAgICAgICAgdGhpcy5lbGVtZW50LnJlbW92ZSgpO1xuICAgIH1cbiBcbiAgICAvLyBvcGVuIG1vZGFsXG4gICAgb3BlbigpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5lbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQoJ3BwbC1tb2RhbC1vcGVuJyk7XG4gICAgfVxuIFxuICAgIC8vIGNsb3NlIG1vZGFsXG4gICAgY2xvc2UoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ3BwbC1tb2RhbC1vcGVuJyk7XG4gICAgfVxuXG59XG4iLCJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUG9wdXBNb2RhbENvbXBvbmVudCB9IGZyb20gJy4vcG9wdXAtbW9kYWwuY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICBdLFxuICBkZWNsYXJhdGlvbnM6IFtQb3B1cE1vZGFsQ29tcG9uZW50XSxcbiAgZXhwb3J0czogW1BvcHVwTW9kYWxDb21wb25lbnRdXG59KVxuZXhwb3J0IGNsYXNzIFBvcHVwTW9kYWxNb2R1bGUgeyB9XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7SUFPRTtzQkFFd0IsRUFBRTtLQUZUOzs7OztJQUlmLCtCQUFHOzs7O0lBQUgsVUFBSSxLQUFVO1FBQ1YsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDM0I7Ozs7O0lBRUQsa0NBQU07Ozs7SUFBTixVQUFPLEVBQVU7UUFDYixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLEdBQUEsQ0FBQyxDQUFDO0tBQ3REOzs7OztJQUVELGdDQUFJOzs7O0lBQUosVUFBSyxFQUFVOztRQUNYLElBQUksS0FBSyxHQUFRLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLEdBQUEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3pELEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztLQUNoQjs7Ozs7SUFFRCxpQ0FBSzs7OztJQUFMLFVBQU0sRUFBVTs7UUFDWixJQUFJLEtB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