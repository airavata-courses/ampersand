(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('popup-modal', ['exports', '@angular/core'], factory) :
    (factory((global['popup-modal'] = {}),global.ng.core));
}(this, (function (exports,i0) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */
    var PopupModalService = (function () {
        function PopupModalService() {
            this.modals = [];
        }
        /**
         * @param {?} modal
         * @return {?}
         */
        PopupModalService.prototype.add = /**
         * @param {?} modal
         * @return {?}
         */
            function (modal) {
                this.modals.push(modal);
            };
        /**
         * @param {?} id
         * @return {?}
         */
        PopupModalService.prototype.remove = /**
         * @param {?} id
         * @return {?}
         */
            function (id) {
                this.modals = this.modals.filter(function (x) { return x.id !== id; });
            };
        /**
         * @param {?} id
         * @return {?}
         */
        PopupModalService.prototype.open = /**
         * @param {?} id
         * @return {?}
         */
            function (id) {
                /** @type {?} */
                var modal = this.modals.filter(function (x) { return x.id === id; })[0];
                modal.open();
            };
        /**
         * @param {?} id
         * @return {?}
         */
        PopupModalService.prototype.close = /**
         * @param {?} id
         * @return {?}
         */
            function (id) {
                /** @type {?} */
                var modal = this.modals.filter(function (x) { return x.id === id; })[0];
                modal.close();
            };
        PopupModalService.decorators = [
            { type: i0.Injectable, args: [{
                        providedIn: 'root'
                    },] },
        ];
        /** @nocollapse */
        PopupModalService.ctorParameters = function () { return []; };
        /** @nocollapse */ PopupModalService.ngInjectableDef = i0.defineInjectable({ factory: function PopupModalService_Factory() { return new PopupModalService(); }, token: PopupModalService, providedIn: "root" });
        return PopupModalService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */
    var PopupModalComponent = (function () {
        function PopupModalComponent(modalService, el) {
            this.modalService = modalService;
            this.el = el;
            this.element = el.nativeElement;
        }
        /**
         * @return {?}
         */
        PopupModalComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                /** @type {?} */
                var modal = this;
                if (!this.id) {
                    console.error('Id is not available');
                    return;
                }
                document.body.appendChild(this.element);
                // close modal on background click
                this.element.addEventListener('click', function (e) {
                    if (e.target.className === 'ppl-modal') {
                        modal.close();
                    }
                });
                this.modalService.add(this);
            };
        /**
         * @return {?}
         */
        PopupModalComponent.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                this.modalService.remove(this.id);
                this.element.remove();
            };
        // open modal
        /**
         * @return {?}
         */
        PopupModalComponent.prototype.open = /**
         * @return {?}
         */
            function () {
                this.element.style.display = 'block';
                document.body.classList.add('ppl-modal-open');
            };
        // close modal
        /**
         * @return {?}
         */
        PopupModalComponent.prototype.close = /**
         * @return {?}
         */
            function () {
                this.element.style.display = 'none';
                document.body.classList.remove('ppl-modal-open');
            };
        PopupModalComponent.decorators = [
            { type: i0.Component, args: [{
                        selector: 'ppl-popup-modal',
                        template: "<div class=\"ppl-modal\">\n            <div class=\"ppl-modal-body\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n        <div class=\"ppl-modal-background\"></div>",
                        styles: ["ppl-popup-modal{display:none}.ppl-modal{position:fixed;top:0;right:0;bottom:0;left:0;z-index:50;overflow:auto}.ppl-modal-background{position:fixed;top:0;right:0;bottom:0;left:0;background-color:#000;opacity:.8;z-index:10}.ppl-modal-body{padding:20px;background:#fff;margin:10%}body.ppl-modal-open{overflow:hidden}"],
                        encapsulation: i0.ViewEncapsulation.None
                    },] },
        ];
        /** @nocollapse */
        PopupModalComponent.ctorParameters = function () {
            return [
                { type: PopupModalService },
                { type: i0.ElementRef }
            ];
        };
        PopupModalComponent.propDecorators = {
            id: [{ type: i0.Input }]
        };
        return PopupModalComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */
    var PopupModalModule = (function () {
        function PopupModalModule() {
        }
        PopupModalModule.decorators = [
            { type: i0.NgModule, args: [{
                        imports: [],
                        declarations: [PopupModalComponent],
                        exports: [PopupModalComponent]
                    },] },
        ];
        return PopupModalModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */

    exports.PopupModalService = PopupModalService;
    exports.PopupModalComponent = PopupModalComponent;
    exports.PopupModalModule = PopupModalModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wdXAtbW9kYWwudW1kLmpzLm1hcCIsInNvdXJjZXMiOlsibmc6Ly9wb3B1cC1tb2RhbC9saWIvcG9wdXAtbW9kYWwuc2VydmljZS50cyIsIm5nOi8vcG9wdXAtbW9kYWwvbGliL3BvcHVwLW1vZGFsLmNvbXBvbmVudC50cyIsIm5nOi8vcG9wdXAtbW9kYWwvbGliL3BvcHVwLW1vZGFsLm1vZHVsZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIFBvcHVwTW9kYWxTZXJ2aWNlIHtcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gIHByaXZhdGUgbW9kYWxzOiBhbnlbXSA9IFtdO1xuIFxuICAgIGFkZChtb2RhbDogYW55KSB7XG4gICAgICAgIHRoaXMubW9kYWxzLnB1c2gobW9kYWwpO1xuICAgIH1cbiBcbiAgICByZW1vdmUoaWQ6IHN0cmluZykge1xuICAgICAgICB0aGlzLm1vZGFscyA9IHRoaXMubW9kYWxzLmZpbHRlcih4ID0+IHguaWQgIT09IGlkKTtcbiAgICB9XG4gXG4gICAgb3BlbihpZDogc3RyaW5nKSB7XG4gICAgICAgIGxldCBtb2RhbDogYW55ID0gdGhpcy5tb2RhbHMuZmlsdGVyKHggPT4geC5pZCA9PT0gaWQpWzBdO1xuICAgICAgICBtb2RhbC5vcGVuKCk7XG4gICAgfVxuIFxuICAgIGNsb3NlKGlkOiBzdHJpbmcpIHtcbiAgICAgICAgbGV0IG1vZGFsOiBhbnkgPSB0aGlzLm1vZGFscy5maWx0ZXIoeCA9PiB4LmlkID09PSBpZClbMF07XG4gICAgICAgIG1vZGFsLmNsb3NlKCk7XG4gICAgfVxufVxuIiwiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgT25Jbml0LCBPbkRlc3Ryb3ksIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQb3B1cE1vZGFsU2VydmljZSB9IGZyb20gJy4vcG9wdXAtbW9kYWwuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BwbC1wb3B1cC1tb2RhbCcsXG4gIHRlbXBsYXRlOiBgPGRpdiBjbGFzcz1cInBwbC1tb2RhbFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBwbC1tb2RhbC1ib2R5XCI+XG4gICAgICAgICAgICAgICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwicHBsLW1vZGFsLWJhY2tncm91bmRcIj48L2Rpdj5gLFxuICBzdHlsZXM6IFtgcHBsLXBvcHVwLW1vZGFse2Rpc3BsYXk6bm9uZX0ucHBsLW1vZGFse3Bvc2l0aW9uOmZpeGVkO3RvcDowO3JpZ2h0OjA7Ym90dG9tOjA7bGVmdDowO3otaW5kZXg6NTA7b3ZlcmZsb3c6YXV0b30ucHBsLW1vZGFsLWJhY2tncm91bmR7cG9zaXRpb246Zml4ZWQ7dG9wOjA7cmlnaHQ6MDtib3R0b206MDtsZWZ0OjA7YmFja2dyb3VuZC1jb2xvcjojMDAwO29wYWNpdHk6Ljg7ei1pbmRleDoxMH0ucHBsLW1vZGFsLWJvZHl7cGFkZGluZzoyMHB4O2JhY2tncm91bmQ6I2ZmZjttYXJnaW46MTAlfWJvZHkucHBsLW1vZGFsLW9wZW57b3ZlcmZsb3c6aGlkZGVufWBdLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIFBvcHVwTW9kYWxDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG5cbiAgICBASW5wdXQoKSBpZDogc3RyaW5nO1xuICAgIHByaXZhdGUgZWxlbWVudDogYW55O1xuIFxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbW9kYWxTZXJ2aWNlOiBQb3B1cE1vZGFsU2VydmljZSwgcHJpdmF0ZSBlbDogRWxlbWVudFJlZikge1xuICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbC5uYXRpdmVFbGVtZW50O1xuICAgIH1cbiBcbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICAgICAgbGV0IG1vZGFsID0gdGhpcztcbiBcbiAgICAgICAgaWYgKCF0aGlzLmlkKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdJZCBpcyBub3QgYXZhaWxhYmxlJyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiBcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLmVsZW1lbnQpO1xuIFxuICAgICAgICAvLyBjbG9zZSBtb2RhbCBvbiBiYWNrZ3JvdW5kIGNsaWNrXG4gICAgICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlOiBhbnkpIHtcbiAgICAgICAgICAgIGlmIChlLnRhcmdldC5jbGFzc05hbWUgPT09ICdwcGwtbW9kYWwnKSB7XG4gICAgICAgICAgICAgICAgbW9kYWwuY2xvc2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gXG4gICAgICAgIFxuICAgICAgICB0aGlzLm1vZGFsU2VydmljZS5hZGQodGhpcyk7XG4gICAgfVxuIFxuICAgIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgICAgICB0aGlzLm1vZGFsU2VydmljZS5yZW1vdmUodGhpcy5pZCk7XG4gICAgICAgIHRoaXMuZWxlbWVudC5yZW1vdmUoKTtcbiAgICB9XG4gXG4gICAgLy8gb3BlbiBtb2RhbFxuICAgIG9wZW4oKTogdm9pZCB7XG4gICAgICAgIHRoaXMuZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKCdwcGwtbW9kYWwtb3BlbicpO1xuICAgIH1cbiBcbiAgICAvLyBjbG9zZSBtb2RhbFxuICAgIGNsb3NlKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKCdwcGwtbW9kYWwtb3BlbicpO1xuICAgIH1cblxufVxuIiwiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBvcHVwTW9kYWxDb21wb25lbnQgfSBmcm9tICcuL3BvcHVwLW1vZGFsLmNvbXBvbmVudCc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbUG9wdXBNb2RhbENvbXBvbmVudF0sXG4gIGV4cG9ydHM6IFtQb3B1cE1vZGFsQ29tcG9uZW50XVxufSlcbmV4cG9ydCBjbGFzcyBQb3B1cE1vZGFsTW9kdWxlIHsgfVxuIl0sIm5hbWVzIjpbIkluamVjdGFibGUiLCJDb21wb25lbnQiLCJWaWV3RW5jYXBzdWxhdGlvbiIsIkVsZW1lbnRSZWYiLCJJbnB1dCIsIk5nTW9kdWxlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7UUFPRTswQkFFd0IsRUFBRTtTQUZUOzs7OztRQUlmLCtCQUFHOzs7O1lBQUgsVUFBSSxLQUFVO2dCQUNWLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQzNCOzs7OztRQUVELGtDQUFNOzs7O1lBQU4sVUFBTyxFQUFVO2dCQUNiLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsR0FBQSxDQUFDLENBQUM7YUFDdEQ7Ozs7O1FBRUQsZ0NBQUk7Ozs7WUFBSixVQUFLLEVBQVU7O2dCQUNYLElBQUksS0FBSyxHQUFRLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLEdBQUEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxD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