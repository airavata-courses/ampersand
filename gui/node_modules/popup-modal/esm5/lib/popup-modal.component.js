/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';
import { PopupModalService } from './popup-modal.service';
var PopupModalComponent = /** @class */ (function () {
    function PopupModalComponent(modalService, el) {
        this.modalService = modalService;
        this.el = el;
        this.element = el.nativeElement;
    }
    /**
     * @return {?}
     */
    PopupModalComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var modal = this;
        if (!this.id) {
            console.error('Id is not available');
            return;
        }
        document.body.appendChild(this.element);
        // close modal on background click
        this.element.addEventListener('click', function (e) {
            if (e.target.className === 'ppl-modal') {
                modal.close();
            }
        });
        this.modalService.add(this);
    };
    /**
     * @return {?}
     */
    PopupModalComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.modalService.remove(this.id);
        this.element.remove();
    };
    // open modal
    /**
     * @return {?}
     */
    PopupModalComponent.prototype.open = /**
     * @return {?}
     */
    function () {
        this.element.style.display = 'block';
        document.body.classList.add('ppl-modal-open');
    };
    // close modal
    /**
     * @return {?}
     */
    PopupModalComponent.prototype.close = /**
     * @return {?}
     */
    function () {
        this.element.style.display = 'none';
        document.body.classList.remove('ppl-modal-open');
    };
    PopupModalComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ppl-popup-modal',
                    template: "<div class=\"ppl-modal\">\n            <div class=\"ppl-modal-body\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n        <div class=\"ppl-modal-background\"></div>",
                    styles: ["ppl-popup-modal{display:none}.ppl-modal{position:fixed;top:0;right:0;bottom:0;left:0;z-index:50;overflow:auto}.ppl-modal-background{position:fixed;top:0;right:0;bottom:0;left:0;background-color:#000;opacity:.8;z-index:10}.ppl-modal-body{padding:20px;background:#fff;margin:10%}body.ppl-modal-open{overflow:hidden}"],
                    encapsulation: ViewEncapsulation.None
                },] },
    ];
    /** @nocollapse */
    PopupModalComponent.ctorParameters = function () { return [
        { type: PopupModalService },
        { type: ElementRef }
    ]; };
    PopupModalComponent.propDecorators = {
        id: [{ type: Input }]
    };
    return PopupModalComponent;
}());
export { PopupModalComponent };
if (false) {
    /** @type {?} */
    PopupModalComponent.prototype.id;
    /** @type {?} */
    PopupModalComponent.prototype.element;
    /** @type {?} */
    PopupModalComponent.prototype.modalService;
    /** @type {?} */
    PopupModalComponent.prototype.el;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wdXAtbW9kYWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vcG9wdXAtbW9kYWwvIiwic291cmNlcyI6WyJsaWIvcG9wdXAtbW9kYWwuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQXFCLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25HLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDOztJQWtCdEQsNkJBQW9CLFlBQStCLEVBQVUsRUFBYztRQUF2RCxpQkFBWSxHQUFaLFlBQVksQ0FBbUI7UUFBVSxPQUFFLEdBQUYsRUFBRSxDQUFZO1FBQ3ZFLElBQUksQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDLGFBQWEsQ0FBQztLQUNuQzs7OztJQUVELHNDQUFROzs7SUFBUjs7UUFDSSxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUM7UUFFakIsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUNYLE9BQU8sQ0FBQyxLQUFLLENBQUMscUJBQXFCLENBQUMsQ0FBQztZQUNyQyxNQUFNLENBQUM7U0FDVjtRQUVELFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQzs7UUFHeEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFNO1lBQ25ELEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsU0FBUyxLQUFLLFdBQVcsQ0FBQyxDQUFDLENBQUM7Z0JBQ3JDLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQzthQUNqQjtTQUNKLENBQUMsQ0FBQztRQUdILElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQy9COzs7O0lBRUQseUNBQVc7OztJQUFYO1FBQ0ksSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ2xDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLENBQUM7S0FDekI7SUFFRCxhQUFhOzs7O0lBQ2Isa0NBQUk7OztJQUFKO1FBQ0ksSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUNyQyxRQUFRLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztLQUNqRDtJQUVELGNBQWM7Ozs7SUFDZCxtQ0FBSzs7O0lBQUw7UUFDSSxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ3BDLFFBQVEsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0tBQ3BEOztnQkF4REosU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxpQkFBaUI7b0JBQzNCLFFBQVEsRUFBRSwwTUFLcUM7b0JBQy9DLE1BQU0sRUFBRSxDQUFDLDJUQUEyVCxDQUFDO29CQUNyVSxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtpQkFDdEM7Ozs7Z0JBWlEsaUJBQWlCO2dCQUROLFVBQVU7OztxQkFnQnpCLEtBQUs7OzhCQWhCVjs7U0FjYSxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBPbkluaXQsIE9uRGVzdHJveSwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBvcHVwTW9kYWxTZXJ2aWNlIH0gZnJvbSAnLi9wb3B1cC1tb2RhbC5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncHBsLXBvcHVwLW1vZGFsJyxcbiAgdGVtcGxhdGU6IGA8ZGl2IGNsYXNzPVwicHBsLW1vZGFsXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHBsLW1vZGFsLWJvZHlcIj5cbiAgICAgICAgICAgICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJwcGwtbW9kYWwtYmFja2dyb3VuZFwiPjwvZGl2PmAsXG4gIHN0eWxlczogW2BwcGwtcG9wdXAtbW9kYWx7ZGlzcGxheTpub25lfS5wcGwtbW9kYWx7cG9zaXRpb246Zml4ZWQ7dG9wOjA7cmlnaHQ6MDtib3R0b206MDtsZWZ0OjA7ei1pbmRleDo1MDtvdmVyZmxvdzphdXRvfS5wcGwtbW9kYWwtYmFja2dyb3VuZHtwb3NpdGlvbjpmaXhlZDt0b3A6MDtyaWdodDowO2JvdHRvbTowO2xlZnQ6MDtiYWNrZ3JvdW5kLWNvbG9yOiMwMDA7b3BhY2l0eTouODt6LWluZGV4OjEwfS5wcGwtbW9kYWwtYm9keXtwYWRkaW5nOjIwcHg7YmFja2dyb3VuZDojZmZmO21hcmdpbjoxMCV9Ym9keS5wcGwtbW9kYWwtb3BlbntvdmVyZmxvdzpoaWRkZW59YF0sXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgUG9wdXBNb2RhbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcblxuICAgIEBJbnB1dCgpIGlkOiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBlbGVtZW50OiBhbnk7XG4gXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBtb2RhbFNlcnZpY2U6IFBvcHVwTW9kYWxTZXJ2aWNlLCBwcml2YXRlIGVsOiBFbGVtZW50UmVmKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGVsLm5hdGl2ZUVsZW1lbnQ7XG4gICAgfVxuIFxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xuICAgICAgICBsZXQgbW9kYWwgPSB0aGlzO1xuIFxuICAgICAgICBpZiAoIXRoaXMuaWQpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0lkIGlzIG5vdCBhdmFpbGFibGUnKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuIFxuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMuZWxlbWVudCk7XG4gXG4gICAgICAgIC8vIGNsb3NlIG1vZGFsIG9uIGJhY2tncm91bmQgY2xpY2tcbiAgICAgICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGU6IGFueSkge1xuICAgICAgICAgICAgaWYgKGUudGFyZ2V0LmNsYXNzTmFtZSA9PT0gJ3BwbC1tb2RhbCcpIHtcbiAgICAgICAgICAgICAgICBtb2RhbC5jbG9zZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiBcbiAgICAgICAgXG4gICAgICAgIHRoaXMubW9kYWxTZXJ2aWNlLmFkZCh0aGlzKTtcbiAgICB9XG4gXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgICAgIHRoaXMubW9kYWxTZXJ2aWNlLnJlbW92ZSh0aGlzLmlkKTtcbiAgICAgICAgdGhpcy5lbGVtZW50LnJlbW92ZSgpO1xuICAgIH1cbiBcbiAgICAvLyBvcGVuIG1vZGFsXG4gICAgb3BlbigpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5lbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQoJ3BwbC1tb2RhbC1vcGVuJyk7XG4gICAgfVxuIFxuICAgIC8vIGNsb3NlIG1vZGFsXG4gICAgY2xvc2UoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ3BwbC1tb2RhbC1vcGVuJyk7XG4gICAgfVxuXG59XG4iXX0=